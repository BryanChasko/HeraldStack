"""
This type stub file was generated by pyright.
"""

def replace_method(the_class, name, replacement, ignore_missing=...): # -> None:
    """ Replaces a method in a class with another version. The old method
    is renamed to method_name_c (because presumably it was implemented in C) """
    ...

def handle_Clustering(the_class): # -> None:
    ...

def handle_Clustering1D(the_class): # -> None:
    ...

def handle_Quantizer(the_class): # -> None:
    ...

def handle_NSG(the_class): # -> None:
    ...

def handle_Index(the_class): # -> None:
    ...

def handle_IndexBinary(the_class): # -> None:
    ...

def handle_VectorTransform(the_class): # -> None:
    ...

def handle_AutoTuneCriterion(the_class): # -> None:
    ...

def handle_ParameterSpace(the_class): # -> None:
    ...

def handle_MatrixStats(the_class): # -> None:
    ...

def handle_IOWriter(the_class): # -> None:
    """ add a write_bytes method """
    ...

def handle_IOReader(the_class): # -> None:
    """ add a read_bytes method """
    ...

def handle_IndexRowwiseMinMax(the_class): # -> None:
    ...

def handle_CodePacker(the_class): # -> None:
    ...

def handle_MapLong2Long(the_class): # -> None:
    ...

def add_to_referenced_objects(self, ref): # -> None:
    ...

class RememberSwigOwnership:
    """
    SWIG's seattr transfers ownership of SWIG wrapped objects to the class
    (btw this seems to contradict https://www.swig.org/Doc1.3/Python.html#Python_nn22
    31.4.2)
    This interferes with how we manage ownership: with the referenced_objects
    table. Therefore, we reset the thisown field in this context manager.
    """
    def __init__(self, obj) -> None:
        ...
    
    def __enter__(self): # -> None:
        ...
    
    def __exit__(self, *ignored): # -> None:
        ...
    


def handle_SearchParameters(the_class): # -> None:
    """ this wrapper is to enable initializations of the form
    SearchParametersXX(a=3, b=SearchParamsYY)
    This also requires the enclosing class to keep a reference on the
    sub-object, since the C++ code assumes the object ownwership is
    handled externally.
    """
    ...

def handle_IDSelectorSubset(the_class, class_owns, force_int64=...): # -> None:
    ...

def handle_CodeSet(the_class): # -> None:
    ...

def handle_Tensor2D(the_class): # -> None:
    ...

def handle_Embedding(the_class): # -> None:
    ...

def handle_Linear(the_class): # -> None:
    ...

def handle_QINCoStep(the_class): # -> None:
    ...

def handle_QINCo(the_class): # -> None:
    ...

def handle_shard_ivf_index_centroids(func): # -> Callable[..., Any]:
    ...

